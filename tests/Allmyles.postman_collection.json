{
	"info": {
		"_postman_id": "3700cf14-296d-4672-888f-a42572fcc2ae",
		"name": "Allmyles",
		"description": "Your trial API key is ready\r\n\r\n7ca093a7-a0af\r\nStart developing immediately and ask support any time!\r\nYou successfully registered to Allmyles forever free trial . Please kindly refer to our API documentation. Should you need further support, we deliver e-mail and issue tracking support without limitations. All you need to do is to put together a working prototype or a ready application and share it with us for UAT and certification. Certification requirements can be found here: API documentation.\r\n\r\nGood luck for the job and do not hesitate to contact us if support is required .\r\n\r\nAfter successful certification, unless already registered, a valid credit card registration is required here for billing purposes.\r\n\r\nThanks for choosing Allmyles Services\r\n\r\nBest Regards\r\n\r\nAllmyles Llc\r\n\r\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Hotels",
			"item": [
				{
					"name": "Search Hotels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43a3f232-668c-45f9-8019-a40a62c5774b",
								"type": "text/javascript",
								"exec": [
									"",
									"pass = true;",
									"fail = false;",
									"",
									"//console.log(data.hotelResultSet[0].max_rate);",
									"//console.log(data.hotelResultSet[0].chain_name);",
									"var data = JSON.parse(responseBody);",
									"var dataHRS =  data.hotelResultSet[0];",
									"var a = dataHRS.chain_name;",
									"var b = dataHRS.distance;",
									"var c = dataHRS.hotel_id;",
									"var d = dataHRS.hotel_name;",
									"var e = dataHRS.latitude;",
									"var f = dataHRS.longitude;",
									"var g = dataHRS.max_rate.amount;",
									"var h = dataHRS.max_rate.currency;",
									"var i = dataHRS.min_rate.amount;",
									"var j = dataHRS.min_rate.currency;",
									"var k = dataHRS.stars;",
									"var l = dataHRS.thumbnail;",
									"//console.log(dataHRS);",
									"//console.log(l);",
									"",
									"tests[\"Hotel Chain Name (Test 1) = \" + a] = a === \"ACCOR HOTELS\";",
									"",
									"if (a ===  \"ACCOR HOTELS\") {",
									"    tests[\"Hotel Chain Name = \" + a] = pass;",
									"} ",
									"else",
									"tests[\"Hotel Chain Name = \" + a] = fail;",
									"",
									"if (b === 1.425) {",
									"    tests[\"Distance = \" + b] = pass;",
									"}",
									"else",
									"tests[\"Distance = \" + b] = fail;",
									"",
									"if (c === \"12_2\") {",
									"    tests[\"Hotel_Id = \" + c] = pass;",
									"}",
									"else",
									"tests[\"Hotel_Id = \" + c] = fail;",
									"",
									"if (d === \"MERCURE PARIS PLACE ITALIE 3*\") {",
									"    tests[\"hotel_name = \" + d] = pass;",
									"}",
									"else",
									"tests[\"hotel_name = \" + d] = false;",
									"",
									"if (e === 48.8303) {",
									"    tests[\"latitude = \" + e] = pass;",
									"}",
									"else",
									"tests[\"latitude = \" + e] = false;",
									"",
									"if (f === 2.35283) {",
									"    tests[\"latitude = \" + f] = pass;",
									"}",
									"else",
									"tests[\"latitude = \" + f] = false;",
									"",
									"if (g === 21951.12 && h === \"HUF\") {",
									"    tests[\"Max_Rate = \" + g + \" \" + h] = pass;",
									"}",
									"else",
									"    tests[\"Max_Rate = \" + g + \" \" + h] = fail;",
									"",
									"if (i === 18024.3 && j === \"HUF\") {",
									"    tests[\"Min_Rate = \" + i + \" \" + j] = pass;",
									"}",
									"else",
									"    tests[\"Min_Rate = \" + i + \" \" + j] = fail;",
									"    ",
									"if (k === 3) {",
									"    tests[\"Stars = \" + k] = pass;",
									"}",
									"else",
									"    tests[\"Stars = \" + k] = fail;",
									"    ",
									"if (l === \"https://static.allmyles.com/hotels/e4ba87c0/12_2.jpg\") {",
									"    tests[\"Thumbnail = \" + l] = pass;",
									"    }",
									"else",
									"    tests[\"Thumbnail =\"  + l] = fail;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\r\n      \"cityCode\": \"LON\",\r\n      \"rooms\": [{\"ADT\": 1, \"CHD\": 1}, {\"ADT\": 1}],\r\n      \"arrivalDate\": \"2014-09-29\",\r\n      \"leaveDate\": \"2014-09-30\",\r\n      \"nationality\": \"HU\"\r\n    }"
						},
						"url": {
							"raw": "https://private-anon-8356d23813-allmyles.apiary-mock.com/hotels",
							"protocol": "https",
							"host": [
								"private-anon-8356d23813-allmyles",
								"apiary-mock",
								"com"
							],
							"path": [
								"hotels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hotel Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6387261b-4a23-4e9f-b64c-3ba4500fdf63",
								"type": "text/javascript",
								"exec": [
									"pass = true;",
									"fail = false;",
									"",
									"var data = JSON.parse(responseBody);",
									"var dataHD = data.hotel_details",
									"var dataHDA = dataHD.amenities;",
									"var amenitiesCount = Object.keys(dataHDA).length;",
									"var a = [dataHDA.air_conditioning",
									",dataHDA.bar",
									",dataHDA.business_center\t",
									",dataHDA.gym\t",
									",dataHDA.internet\t",
									",dataHDA.laundry\t",
									",dataHDA.meeting_rooms\t",
									",dataHDA.parking\t",
									",dataHDA.restaurant\t",
									",dataHDA.room_service\t",
									",dataHDA.safe_deposit_box\t",
									",dataHDA.spa\t",
									",dataHDA.swimming]",
									"var b = (a.filter(true).length);",
									"var c = (a.filter(false).length);",
									"var d = dataHD.photos;",
									"",
									"if (amenitiesCount === 13) {",
									"    tests[\"Number of Amenities = \" + amenitiesCount] = pass;",
									"}",
									"else if (amenitiesCount > 13) {",
									"    tests[\"Number of Amenities > \" + amenitiesCount] = fail;",
									"}",
									"else if (amenitiesCount < 13) {",
									"    tests[\"Number of Amenities < \" + amenitiesCount] = fail;",
									"}",
									"else",
									"    tests[\"Number of Amenities <>  \" + amenitiesCount] = fail;",
									"",
									"if (b === 6) {",
									"    tests[\"Number of True Amenities = \" + 6] = pass;",
									"}",
									"else",
									"    tests[\"Number of True Amenities = \" + 6] = fail;",
									"",
									"if (c === 7) {",
									"    tests[\"Number of False Amenities = \" + 7] = pass;",
									"}",
									"else",
									"    tests[\"Number of False Amenities = \" + 7] = fail;",
									"",
									"if (amenitiesCount === 13 && b === 6 && c === 7) {",
									"tests[\"Amenities Count\"] = pass;",
									"}",
									"else",
									"tests[\"Amenities Count\"] = fail;",
									"",
									"if (d.length === 8) {",
									"    tests[\"Number of photos = \" + d.length] = pass;",
									"}",
									"else",
									"    tests[\"Number of photos = \" + d.length] = fail;",
									"",
									"",
									"",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    ",
									"    "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://private-anon-8356d23813-allmyles.apiary-mock.com/hotels/hotel_id",
							"protocol": "https",
							"host": [
								"private-anon-8356d23813-allmyles",
								"apiary-mock",
								"com"
							],
							"path": [
								"hotels",
								"hotel_id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Room Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c08f826-47ca-4467-9681-622c03dd16aa",
								"type": "text/javascript",
								"exec": [
									"pass = true;",
									"fail = false;",
									"",
									"var data = JSON.parse(responseBody);",
									"var a = data.hotel_room_details.price.amount;",
									"var b = Object.keys(data.hotel_room_details.rules.remarks)",
									"//console.log(b);",
									"",
									"if (a === \"12887.08\") {",
									"    tests[\"Price is correct = \" + a] = pass;",
									"}",
									"else if (a > \"12887.08\") {",
									"    tests[\"Price is > \" + a] = fail;",
									"}",
									"else if (a < \"12887.08\") {",
									"    tests[\"Price is < \" + a] = fail;",
									"}",
									"else",
									"    tests[\"Price <> \" + a] = fail;",
									"",
									"if (b.length === 3) {",
									"    tests[\"Number of Remarks = \" + b.length] = pass;",
									"}    ",
									"else ",
									"    tests[\"Number of Remarks <> \" + b.length] = fail;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://private-anon-8356d23813-allmyles.apiary-mock.com/hotels/hotel_id/rooms/room_id",
							"protocol": "http",
							"host": [
								"private-anon-8356d23813-allmyles",
								"apiary-mock",
								"com"
							],
							"path": [
								"hotels",
								"hotel_id",
								"rooms",
								"room_id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hotel Booking Status ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27f731e3-13f9-4e7c-b447-b49c525af0f9",
								"type": "text/javascript",
								"exec": [
									"pass = true;",
									"fail = false;",
									"",
									"var data = JSON.parse(responseBody);",
									"var a = data.reservationState;",
									"console.log(a)",
									"",
									"",
									"if (a === \"CONFIRMED\") {",
									"    tests[\"Status = \" + a] = pass;",
									"}",
									"else",
									"    tests[\"Status <> \" + a] = fail;",
									"    "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://private-anon-8356d23813-allmyles.apiary-mock.com/hotels/pnr/status",
							"protocol": "http",
							"host": [
								"private-anon-8356d23813-allmyles",
								"apiary-mock",
								"com"
							],
							"path": [
								"hotels",
								"pnr",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f53834c9-e1a1-4251-a3c4-51321c3f629b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d0fd8869-a5b8-4e4c-8652-322a0fcb0863",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			]
		}
	]
}